<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.se1.chatservice.domain.db.read.RChatMapper">

	<resultMap id="chat_result" type="com.se1.chatservice.domain.db.dto.ChatDto">
		<result column="id" jdbcType="BIGINT" javaType="java.lang.Long" property="id" />
		<result column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" property="userId" />
		<result column="content" jdbcType="VARCHAR" javaType="java.lang.String" property="content" />
		<result column="status" jdbcType="INTEGER" javaType="java.lang.Integer" property="status" />
		<result column="topic_id" jdbcType="VARCHAR" javaType="java.lang.String" property="topicId" />
		<result column="chat_parent" jdbcType="BIGINT" javaType="java.lang.Long" property="chatParent" />
		<result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
		<result column="user_delete_id" jdbcType="BIGINT" javaType="java.lang.Long" property="userDeleteId" />
		<result column="is_file" jdbcType="INTEGER" javaType="java.lang.Integer" property="isFile" />
	</resultMap>

	<select id="getAllChat" resultMap="chat_result">
		Select * from chats 
		Where topic_id = #{topicId} AND user_delete_id != #{userDelete} 
		Order by create_at DESC
		Limit #{limit} Offset #{offset}
	</select>

	<select id="getChatById" resultMap="chat_result">
		Select * from chats 
		Where id = '${id}'
	</select>

</mapper>